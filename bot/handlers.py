from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime, timedelta
from core.crud import create_or_get_user, update_subscription
from core.v2ray_api import create_v2ray_client

menu = ReplyKeyboardMarkup(
    [["üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü", "üìÜ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞"]],
    resize_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏:", reply_markup=menu)

async def handle_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.username
    text = update.message.text

    duration = timedelta(days=30) if "–º–µ—Å—è—Ü" in text else timedelta(days=90)
    expires_at = datetime.utcnow() + duration

    user = create_or_get_user(user_id, username)
    client_config = create_v2ray_client(user_id, expires_at)
    update_subscription(user_id, expires_at, client_config["uuid"])

    await update.message.reply_text(
        f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ {expires_at.strftime('%d.%m.%Y %H:%M')} UTC\n\n–í–æ—Ç –≤–∞—à –∫–æ–Ω—Ñ–∏–≥:\n{client_config['config']}"
    )
